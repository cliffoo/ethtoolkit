{"version":3,"sources":["components/Header.js","components/Kit/Hex.js","components/Kit/Hash.js","components/Kit/Equal.js","components/Kit/Kit.js","components/Decoder.js","components/App.js","index.js"],"names":["Header","Hex","useState","hex","setHex","dec","setDec","reset","className","value","onChange","target","test","toString","parseInt","Hash","input","setInput","hash","setHash","keccak256","readOnly","cols","rows","Equal","x","setX","y","setY","caseSensitive","setCaseSensitive","undefined","equal","setEqual","toLowerCase","type","defaultChecked","Kit","Decoder","abi","setAbi","inputData","setInputData","decoded","setDecoded","decode","abiNow","inputDataNow","abiToUse","inputDataToUse","abiList","decoder","decodedData","JSON","parse","err","InputDecoder","decodeData","stringify","App","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1569edc.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>ETHToolkit</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\n\r\nconst Hex = () => {\r\n  const [hex, setHex] = useState('');\r\n  const [dec, setDec] = useState('');\r\n\r\n  const reset = () => {\r\n    setDec('');\r\n    setHex('');\r\n  };\r\n  const handleDecInputChange = ({ target: { value } }) => {\r\n    if (value === '') { reset(); }\r\n    if (/^[0-9]+$/.test(value)) {\r\n      value = parseInt(value);\r\n      setDec(value);\r\n      setHex(value.toString(16));\r\n    }\r\n  };\r\n  const handleHexInputChange = ({ target: { value } }) => {\r\n    if (value === '') { reset(); }\r\n    if (/^[0-9a-fA-F]+$/.test(value)) {\r\n      value = value.toString();\r\n      setHex(value);\r\n      setDec(parseInt(value, 16));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='kit-tool kit-tool-hex'>\r\n      <h2 className='kit-tool-label'>Hex &#8652; dec</h2>\r\n      <div className='kit-tool-hex-input-container'>\r\n        <p>Hex:&nbsp;</p>\r\n        <input value={hex} onChange={handleHexInputChange} />\r\n      </div>\r\n      <div className='kit-tool-hex-input-container'>\r\n        <p>Dec:&nbsp;</p>\r\n        <input value={dec} onChange={handleDecInputChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hex;\r\n","import { useState } from 'react';\r\nimport * as keccak256 from 'keccak256';\r\n\r\nconst Hash = () => {\r\n  const [input, setInput] = useState('');\r\n  const [hash, setHash] = useState('');\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setInput(value);\r\n    setHash(keccak256(value).toString('hex'));\r\n  };\r\n\r\n  return (\r\n    <div className='kit-tool kit-tool-hash'>\r\n      <h2 className='kit-tool-label'>Keccak256</h2>\r\n      <div className='kit-tool-hash-input-container'>\r\n        <p>Text input:&nbsp;</p>\r\n        <input value={input} onChange={handleInputChange} />\r\n      </div>\r\n      <textarea value={hash} readOnly={true} cols={30} rows={1} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hash;\r\n","import { useState } from \"react\";\r\n\r\nconst Equal = () => {\r\n  const [x, setX] = useState('');\r\n  const [y, setY] = useState('');\r\n  const [caseSensitive, setCaseSensitive] = useState(false);\r\n  const [equal, setEqual] = useState(undefined);\r\n\r\n  const handleXChange = ({ target: { value } }) => {\r\n    value = value.toString();\r\n    setX(value);\r\n    if (caseSensitive) { setEqual(value === y); }\r\n    else { setEqual(value.toLowerCase() === y.toLowerCase()); }\r\n  };\r\n  const handleYChange = ({ target: { value } }) => {\r\n    value = value.toString();\r\n    setY(value);\r\n    if (caseSensitive) { setEqual(value === x); }\r\n    else { setEqual(value.toLowerCase() === x.toLowerCase()); }\r\n  };\r\n  const handleCheckboxChange = () => {\r\n    if (caseSensitive) { setEqual(x.toLowerCase() === y.toLowerCase()); }\r\n    else { setEqual(x === y); }\r\n    setCaseSensitive(!caseSensitive);\r\n  };\r\n\r\n  return (\r\n    <div className='kit-tool kit-tool-equality'>\r\n      <h2 className='kit-tool-label'>Equality</h2>\r\n      <textarea value={x} onChange={handleXChange} cols={40} rows={2} />\r\n      <div className='kit-tool-equality-mid-container'>\r\n        <p>Case sensitive:&nbsp;</p>\r\n        <input type='checkbox' defaultChecked={caseSensitive} onChange={handleCheckboxChange} />\r\n        {typeof (equal) === 'boolean' &&\r\n          <div className={`kit-tool-equality-equality-container ${equal ? 'green' : 'red'}`}>\r\n            {equal ? '=' : 'â‰ '}\r\n          </div>\r\n        }\r\n      </div>\r\n      <textarea value={y} onChange={handleYChange} cols={40} rows={2} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Equal;\r\n","import Hex from './Hex';\r\nimport Hash from './Hash';\r\nimport Equal from './Equal';\r\n\r\nconst Kit = () => {\r\n  return (\r\n    <div className='kit'>\r\n      <Hex />\r\n      <Hash />\r\n      <Equal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kit;\r\n","import { useState } from 'react';\r\nimport * as InputDecoder from 'ethereum-input-data-decoder';\r\n\r\nconst Decoder = () => {\r\n  const [abi, setAbi] = useState('');\r\n  const [inputData, setInputData] = useState('');\r\n  const [decoded, setDecoded] = useState('');\r\n\r\n  const decode = ({ abiNow, inputDataNow }) => {\r\n    const abiToUse = abiNow ? abiNow : abi;\r\n    const inputDataToUse = inputDataNow ? inputDataNow : inputData;\r\n\r\n    if (abiToUse === '' || inputDataToUse === '') {\r\n      setDecoded('');\r\n      return;\r\n    }\r\n\r\n    let abiList, decoder, decodedData;\r\n    try {\r\n      abiList = JSON.parse(abiToUse);\r\n    } catch (err) { setDecoded('Failed to parse ABI as JSON'); }\r\n    try {\r\n      decoder = new InputDecoder(abiList);\r\n    } catch (err) { setDecoded('Invalid ABI'); }\r\n    try {\r\n      decodedData = decoder.decodeData(inputDataToUse);\r\n      setDecoded(JSON.stringify(decodedData, null, 2));\r\n    } catch (err) { setDecoded('Invalid input data'); }\r\n  };\r\n  const handleAbiChange = ({ target: { value } }) => {\r\n    value = value.toString();\r\n    setAbi(value);\r\n    decode({ abiNow: value });\r\n  };\r\n  const handleInputDataChange = ({ target: { value } }) => {\r\n    value = value.toString();\r\n    setInputData(value);\r\n    decode({ inputDataNow: value });\r\n  };\r\n\r\n  return (\r\n    <div className='decoder'>\r\n      <h2 className='decoder-label'>Decode input data</h2>\r\n      <div className='decoder-tools-container'>\r\n        <div className='decoder-tool'>\r\n          <p>ABI</p>\r\n          <textarea value={abi} onChange={handleAbiChange} />\r\n        </div>\r\n        <div className='decoder-tool'>\r\n          <p>Input data</p>\r\n          <textarea value={inputData} onChange={handleInputDataChange} />\r\n        </div>\r\n        <div className='decoder-tool'>\r\n          <p>Decoded</p>\r\n          <textarea value={decoded} readOnly />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decoder;\r\n","import Header from './Header';\nimport Kit from './Kit/Kit';\nimport Decoder from './Decoder';\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Header />\n      <div className='content'>\n        <Kit />\n        <Decoder />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}